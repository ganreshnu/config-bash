#
# bash/rc
#

# globs include dotfiles
shopt -s dotglob
shopt -s globstar

# set the history options
# make the xdg state directory
[[ ! -d "${XDG_STATE_HOME:-$HOME/.local/state}/bash" ]] \
	&& mkdir -p "${XDG_STATE_HOME:-$HOME/.local/state}/bash"

# history variables
HISTFILE="${XDG_STATE_HOME:-$HOME/.local/state}/bash/history"
HISTCONTROL=ignoredups:ignorespace
shopt -s histappend
shopt -s histverify
shopt -s cmdhist
shopt -s lithist

# include each bashrc from user configurations
for d in $(<"${XDG_STATE_HOME:-$HOME/.local/state}/user_config_dirs"); do
	[[ -f "$HOME/$d/.bashrc" ]] && . "$HOME/$d/.bashrc"
done
unset d

__color() {
	local color="$1"; shift
	printf "$(tput setaf $color)%s$(tput sgr0)" "$*"
}
__style() {
	local style="$1"; shift
	printf "$(tput $style)%s$(tput sgr0)" "$*"
}

PROMPT_COMMAND=__prompt_command
__prompt_command() {
	local exitCode="$?"


	__status() {
		if git rev-parse 2>/dev/null; then
			local branch="$(git branch --show-current)"
			printf ' on %s' "$(__color 4 "$branch")"
		fi
	}
	PS1_GIT="$(__status)"

	local color=2
	if [[ $exitCode != 0 ]]; then
		color=1
	fi
	PS1_RESULT="$(__color "$color" '>')"

	return "$exitCode"
}

__ps1_hostname="$(__color 8 '\h')"
__ps1_hostname="$(__style bold "$__ps1_hostname")"
PS1=$( printf '%s:%s$PS1_GIT\n$PS1_RESULT ' "$__ps1_hostname" "$(__color 13 '\w')" )

alias mkosi='mkosi -i --cache-dir=${XDG_CACHE_HOME:-$HOME/.cache}/mkosi.cache'

# alias spack='podman run --rm -it -v $PWD:$PWD -w $PWD -v $HOME/Spack/spack-cache:/cache -v $HOME/Spack/spack-gpg:/opt/spack/opt/spack/gpg -v $HOME/Spack/spack-repo:/repo -v $HOME/Spack/spack-download:/opt/spack/var/spack/cache -v /tmp/spack-stage:/tmp/root/spack-stage spack'
# alias spack='podman run --rm -it -v $PWD:$PWD -w $PWD -v /tmp:/tmp -v $HOME/.cache/spack:/cache -v $HOME/Spack/spack-gpg:/gpg spack'
# . ${XDG_CONFIG_HOME:-$HOME/.config}/bash/rc

# WLR_DRM_DEVICES=/dev/dri/card2:/dev/dri/card1
# vim: ft=bash
